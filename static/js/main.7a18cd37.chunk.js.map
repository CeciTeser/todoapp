{"version":3,"sources":["context/Auth/index.tsx","helpers/index.ts","utils/axios.tsx","hooks/useAuth/index.tsx","component/Common/Nav/index.tsx","component/Layout/Main/index.tsx","component/Layout/Presentation/index.tsx","component/Common/Loading/index.tsx","component/Common/Footer/index.tsx","assets/img/pawprint.png","component/Common/Logo/index.tsx","component/Common/Header/index.tsx","component/Common/Contact/index.tsx","component/Layout/Layout-pages/index.tsx","component/Layout/Profile-card/api/index.tsx","api/breeds.ts","api/dogslist.tsx","component/Layout/Profile-card/index.tsx","component/Forms/AddTask/api/index.tsx","component/Forms/AddTask/index.tsx","component/Layout/Schedule/api/index.tsx","component/Layout/Schedule/index.tsx","component/Forms/TaskToEdit/api/index.ts","component/Forms/TaskToEdit/index.tsx","component/Forms/Login/default-values.ts","component/Forms/Login/validation-schema.ts","component/Forms/Login/index.tsx","pages/LoginPage/index.tsx","component/Forms/SignUp/api/index.ts","component/Forms/SignUp/index.tsx","component/Forms/Categories/api/index.tsx","component/Forms/Categories/index.tsx","pages/SignUpPage/index.tsx","hoc/WithAuth/index.tsx","pages/CategoriesPage/index.tsx","pages/Profile/index.tsx","pages/Dashboard/index.tsx","pages/EditTasks/index.tsx","pages/Contact/index.tsx","App.tsx","index.tsx"],"names":["AuthContext","createContext","currentUser","setCurrentUser","AuthProvider","children","useState","Provider","value","mapToArray","object","array","elem","push","id","api","axios","create","baseURL","apiBreeds","useAuth","localStorage","getItem","undefined","tokenStorage","setTokenStorage","userSession","setUserSession","useHistory","useContext","useEffect","setItem","loginWithToken","createUserToken","user","a","newToken","Math","random","toString","substr","patch","sessionToken","login","email","password","get","response","users","data","find","token","Error","logout","removeItem","signUp","Nav","className","to","onClick","Main","Presentation","Loading","loading","style","position","top","right","bottom","left","display","alignItems","justifyContent","color","size","Footer","Logo","src","pawprint","alt","Header","hideNav","Contact","Layout","page","hideFooter","profile","post","getBreeds","breedsList","showDogsList","dogs","ProfileCard","dogname","setDogName","dogbreed","setDogBreed","dogbreedselected","setDogBreedSelected","dogsList","setDogsList","then","action","onSubmit","e","preventDefault","username","htmlFor","type","name","placeholder","onChange","target","selected","disabled","map","breeds","dog","delete","todocard","getCategories","AddTask","dogselected","setDogSelected","updatetable","setUpdateTable","title","setTitle","description","setDescription","todostate","setToDoState","tododate","setToDoDate","categorylist","setCategoryList","category","setCategory","handleSubmit","required","item","getToDoList","listoftasks","deleteTask","task","Schedule","tasks","setTasks","idtask","setidTask","removeTask","currentUserId","taskId","getTaskToEdit","console","log","defaultValues","TaskToEdit","taskid","inputs","setInputs","validationSchema","yup","shape","Login","useForm","resolver","yupResolver","register","errors","formState","message","LoginPage","SignUp","setUsername","setPassword","setEmail","createCategory","Categories","newcategory","setNewCategory","categoryid","SignUpPage","publicRoutes","WithAuth","Component","location","includes","pathname","ContactPage","App","path","component","CategoriesPage","Dashboard","EditTasks","Profile","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a18cd37.chunk.js","sourcesContent":["\nimport { createContext, Dispatch, FC, SetStateAction, useState } from \"react\";\nimport { User } from \"../../types\";\n\ntype ContextType = {\n    currentUser?: Partial<User | undefined>;\n    setCurrentUser: Dispatch<SetStateAction<Partial<User | undefined>>>;\n\n};\n\nconst AuthContext = createContext<ContextType>({\n    currentUser: {},\n    setCurrentUser: () => undefined,\n});\n\nconst AuthProvider: FC = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState<Partial<User | undefined>>();\n\n    return (\n        <AuthContext.Provider value={{ currentUser, setCurrentUser}}>\n        {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport { AuthContext, AuthProvider };","const mapToArray = (object: any) => {\n    const array = [];\n\n    for (const elem in object) {\n    array.push({\n        id: elem,\n        ...object[elem],\n    });\n    }\n\n    return array;\n};\n\nexport { mapToArray }","import axios from 'axios';\n\n//--------FIREBASE--------\n\nconst api = axios.create({\n    baseURL:'https://todoapp-99a76-default-rtdb.firebaseio.com'\n});\n\n\n\nexport { api }\n\n\n//--------BREEDS--------\n\nconst apiBreeds= axios.create({\n    baseURL: 'https://api.thedogapi.com/v1/breeds?api_key=f80ca8cc-8dd0-417c-a14a-e2623d80adb6',\n\n});\n\nexport { apiBreeds };\n\nconst apiBreedsInfo = axios.create ({\n    baseURL: 'https://api.thedogapi.com/v1/breeds/search?'\n\n});\n\nexport { apiBreedsInfo };","import { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context\";\nimport { mapToArray } from \"../../helpers\";\nimport { User } from \"../../types\";\nimport { api } from \"../../utils\";\n\nconst useAuth = () => {\n    const [tokenStorage, setTokenStorage] = useState<string | undefined>(\n        localStorage.getItem(\"token\") || undefined\n    );\n\n    const [userSession, setUserSession] = useState<boolean>();\n\n    const { push } = useHistory();\n\n    const { currentUser, setCurrentUser } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (tokenStorage) localStorage.setItem(\"token\", tokenStorage);\n    }, [tokenStorage]);\n    \n    \n    useEffect(() => {\n        loginWithToken();  \n    }, []);\n\n\n    const createUserToken = async (user: User): Promise<string | null> => {\n        const newToken = Math.random().toString(36).substr(2);\n\n        try {\n        await api.patch(`/users/${user.id}.json`, { sessionToken: newToken });\n        return newToken;\n        } catch (err) {\n        return null;\n        }\n    };\n    \n    const login = async (email: string, password: string) => {\n        try {\n        const response = await api.get(\"/users.json\");\n\n        const users: User[] = mapToArray(response.data);\n\n        const user = users.find(\n            (user) => user.email === email && user.password === password\n        );\n\n        if (user) {\n            const token = await createUserToken(user);\n    \n            if (token) {\n            setTokenStorage(token);\n            push(\"/\");\n            setCurrentUser(user);\n            } else {\n                setUserSession(false);\n            }\n        } else {\n            throw new Error(\"El usuario no existe\");\n        }\n        } catch (e) {\n        \n        }\n    };\n\n    const loginWithToken = async () => {\n        let user;\n        try {\n        const response = await api.get(\"/users.json\");\n\n        const users: User[] = mapToArray(response.data);\n\n        if (tokenStorage) {\n            user = users.find((user) => user.sessionToken === tokenStorage);\n        }\n\n        if (user) {\n            setCurrentUser(user);\n            setUserSession(true);   \n        } else {\n            setUserSession(false);\n        }\n        } catch (e) {\n        \n        }\n    };\n\n    const logout = () => {\n        localStorage.removeItem(\"token\");\n        setCurrentUser(undefined);\n        push(\"/login\");\n    };\n\n    const signUp = () => {};\n\n    return { login, loginWithToken, logout, signUp, userSession, currentUser};\n};\n\nexport { useAuth };\n","import { FC } from \"react\"\nimport { Link } from 'react-router-dom';\nimport { useAuth } from \"../../../hooks\";\n\nimport './styles.scss';\n\n\n\nconst Nav: FC = () => {\n\n    const { logout } = useAuth();\n\n    return (\n    \n        <nav className=\"nav\">\n            <ul>\n                <li>\n                    <Link to=\"/dashboard\">HOME</Link>\n                </li>\n                <li>\n                    <Link to=\"/profile\">PROFILE</Link>\n                </li>\n                <li>\n                    <Link to=\"/categories\">CATEGORIES</Link>\n                </li>\n\n                <button onClick={logout}>LOGOUT</button>\n            </ul>\n        </nav>\n    \n    )\n\n}\n\nexport { Nav }\n\n","\nimport { FC } from 'react';\n\ntype Props={\n    className?: string,\n}\nconst Main:FC <Props> =({children, className})=>{\n    return (\n        <>\n            <main className = {className}>{children}</main>\n            \n        </>\n    )\n}   \n\nexport { Main };","import { FC } from 'react';\n\nimport './styles.scss';\n\nconst Presentation:FC =()=>{\n    return (\n        <div>\n            <div className= \"presentation-box\">\n                <h2 className=\"hi\">Hi there!</h2>\n                <p className='presentation'>\n                We like to think that every day is a dog day!\n                Pawow is here to help you provide the most fun for you and your dog while having a schedule of the things you need and want to do with each of your dogs.\n                We will give you information on how you can positively play with your dog, and most important, help you give your dog a happy life. \n                </p>\n            </div>\n        </div>\n    )\n}   \n\nexport { Presentation };\n","import { useState } from \"react\";\nimport RingLoader from \"react-spinners/RingLoader\";\n\nconst Loading = () => {\n    const [loading] = useState();\n\n    return (\n        <div\n        style={{\n            position: \"fixed\",\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n        }}\n        >\n        <RingLoader color=\"#555\" loading={loading} size={25} />\n        </div>\n    );\n};\n\nexport { Loading };","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './styles.scss';\n\nconst Footer:FC =()=>{\n    return (\n        <div className='footer'>\n            <ul>\n                <li>\n                <Link to=\"/contact\"> CONTACT</Link>\n                </li>\n            </ul>\n        </div> \n    )\n\n}\n\nexport {Footer}","export default __webpack_public_path__ + \"static/media/pawprint.8ec9c33c.png\";","\nimport pawprint from '../../../assets/img/pawprint.png'\n\nimport './styles.scss';\n\nconst Logo =()=>{\n    return (\n        <div className=\"logo\">\n            <p>PAWOW</p>\n            <img src={pawprint} alt=\"\" />\n        </div>\n    )\n\n}\n\nexport { Logo }","import { Logo } from '../Logo';\nimport { FC } from \"react\";\nimport { Nav } from '../..';\n\n\nimport './styles.scss';\n\ntype Props={\n    hideNav?:boolean, \n}\n\nconst Header: FC < Props > = ({hideNav}) => {\n\n    return (\n    \n        <header className=\"header\">\n        <Logo/>\n        {!hideNav &&  <Nav/>} \n        </header>\n    \n    )\n\n}\n\nexport { Header }\n\n","import { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport './styles.scss';\n\nconst Contact:FC =() =>{\n\n    return(\n        <div className='contact-page'>\n\n            <div className='contacts'>\n\n                <h4>Hi There! We would love for you to get in touch with us!</h4>\n\n                <ul>\n                    <li><span>Telephone:</span> +34 75789894</li>\n\n                    <li><span>Email:</span> hello@pawow.com</li>\n                </ul>\n            </div>\n\n            <Link to=\"/login\">Login</Link>\n        </div>\n    )\n\n\n}\n\nexport { Contact }","import { FC } from 'react';\nimport {Main} from '../Main';\nimport { Footer } from '../../Common';\nimport { Header } from '../../Common'\n\ntype Props={\n    page?:string,\n    hideNav?:boolean, \n    hideFooter?:boolean,\n}\nconst Layout:FC < Props >= ({children , page, hideNav, hideFooter})=> {\n\n    return (\n        <>\n            <Header hideNav={hideNav}/> \n\n            <Main className = {page} >\n            {children}\n            </Main>\n            {!hideFooter &&  <Footer />} \n\n        </>\n    )\n\n};\n\nexport { Layout };","\nimport { Dogs } from \"../../../../types\";\nimport { api } from \"../../../../utils\";\n\nconst profile= async (user:string|undefined, data: Dogs) =>{\n\n    await api.post(`/users/${user}/dogs.json`, data);\n\n}\n\nconst deleteDog = (user:string|undefined , dog:string ) => {\n    api.delete(`/users/${user}/dogs/${dog}.json`);\n\n};\nexport { profile , deleteDog};\n","import { mapToArray } from \"../helpers\";\nimport { Breeds } from \"../types\";\nimport { apiBreeds } from \"../utils\";\n\n\n\nconst getBreeds = async (): Promise<Breeds[]> => {\n    const breedsList = await apiBreeds.get(\"/breeds.json\");\n    return mapToArray(breedsList.data);\n};\n\nexport { getBreeds };","import { mapToArray } from \"../helpers\";\nimport { api } from \"../utils\";\n\nconst showDogsList = async (user: string|undefined)=>{\n\n    const dogs = await api.get(`/users/${user}/dogs.json`)\n    return mapToArray (dogs.data)\n};\n\nexport {showDogsList};","import { FC, FormEvent, useContext, useEffect, useState } from 'react';\nimport {deleteDog, profile} from './api';\nimport { getBreeds, showDogsList} from '../../../api';\nimport { Breeds, Dogs} from '../../../types';\nimport { AuthContext } from '../../../context';\n\n\nimport './styles.scss';\n\n\n\nconst ProfileCard: FC =()=>{\n\n\n        const [dogname, setDogName] = useState <string>('')\n\n\n        const [dogbreed, setDogBreed] = useState<Breeds[] | undefined>();\n        const [dogbreedselected, setDogBreedSelected] = useState <string>('');\n        \n\n        const [dogsList, setDogsList] = useState < Dogs[] | undefined >();\n\n\n\n        const {currentUser } = useContext(AuthContext);\n\n\n        useEffect(() => {\n            getBreeds().then((response) => {\n                setDogBreed(response);\n            });\n        },);\n\n\n        useEffect(() => {\n            showDogsList(currentUser?.id).then((response) => {\n                setDogsList(response);\n            });\n        },);\n\n        const handleSubmit =  (e: FormEvent<HTMLElement>) => {\n            e.preventDefault();\n\n            setDogName('');\n            setDogBreedSelected('');\n\n            profile (currentUser?.id, {dogname, dogbreedselected});\n\n    }\n\n    return (\n            <div className=\"profile-card\">\n                <form action=\"\" onSubmit={handleSubmit}>\n                    \n                    <h5 >WELCOME {currentUser?.username} </h5>\n\n                    <h4>PLEASE ADD YOUR DOG´S NAME AND BREED</h4>\n\n                    <div>\n                        <label htmlFor=\"dog-name\">DOG´S NAME: </label>\n                        <input id=\"dog-name\" type=\"text\" name=\"dog-name\" value={dogname} placeholder=\"ENTER YOUR DOG´S NAME\" onChange={(e)=>{\n                            setDogName(e.target.value)\n                        }}/>\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"dog-breed\">DOG´S BREED</label>\n                        <select \n                        name=\"dog-breed\" \n                        id=\"dog-breed\" \n                        value={dogbreedselected}\n                        onChange={e =>{ \n                            setDogBreedSelected(e.target.value)\n                        }}>\n                            <option \n                                value=''\n                                selected disabled>SELECT YOUR DOG´S BREED\n                            </option>\n                                {dogbreed?.map(breeds=>{\n                                    return (\n                                        <option key={breeds.id} value={breeds.name}>{breeds.name}</option>\n                                    )\n                                })}\n                        </select>   \n                    </div>\n\n                    <button type=\"submit\">OK</button>\n\n                </form>\n                <div>\n                    <p>Your registered dog´s are: </p> \n                    <div className ='dog-name-list'> {dogsList?.map(dogs=>{\n                                    return (\n                                        <ul>    \n                                        <li>{dogs.dogname} <button onClick={() => deleteDog(currentUser?.id,`${dogs.id}`)}> DELETE DOG</button></li>\n                                        </ul>\n                                    )\n                                })}\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nexport { ProfileCard }","import { mapToArray } from \"../../../../helpers\";\nimport { Todo } from \"../../../../types\";\nimport { api } from \"../../../../utils\";\n\n\nconst todocard = async (user:string|undefined, dog:string,  data: Todo) =>{\n\n    await api.post(`/users/${user}/dogs/${dog}/todo.json`, data);\n\n}\n\nconst getCategories = async (user:string|undefined) => {\n    const response = await api.get(`/users/${user}/categories.json`);\n    return mapToArray(response.data);\n};\n\nexport { todocard, getCategories };\n\n","import { Dispatch, FC, FormEvent, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport { showDogsList } from \"../../../api\";\nimport { AuthContext } from \"../../../context\";\nimport { Category, Dogs} from \"../../../types\";\nimport { getCategories, todocard } from \"./api\";\n\n\nimport './styles.scss';\n\nexport type Props={\n    dogselected: string,\n    setDogSelected: Dispatch<SetStateAction<string>>,\n    updatetable:boolean,\n    setUpdateTable: Dispatch<SetStateAction<boolean>>,\n}\n\nconst AddTask:FC <Props>  = ({dogselected, setDogSelected, updatetable, setUpdateTable })=> {\n\n\n    const [dogsList, setDogsList] = useState < Dogs[] >();\n    const [title, setTitle] = useState<string>(\"\")\n    const [description, setDescription] = useState<string>(\"\")\n    const [todostate, setToDoState] = useState<string>(\"\")\n    const [tododate, setToDoDate] = useState<string>(\"\")\n    const [categorylist, setCategoryList] = useState<Category[]>()\n    const [category, setCategory] =  useState<string>(\"\")\n\n    const {currentUser } = useContext(AuthContext);\n    \n\n\n    useEffect(() => {\n        showDogsList(currentUser?.id).then((response) => {\n            setDogsList(response);\n        });\n        getCategories(currentUser?.id).then((response) => {\n            setCategoryList(response);\n        });\n    },[]);\n    \n    \n    const handleSubmit = async (e: FormEvent<HTMLElement>) => {\n            e.preventDefault();\n\n        await todocard (currentUser?.id, dogselected, {title, description, todostate, tododate, category})\n\n        setUpdateTable(!updatetable)\n\n        setTitle('');\n        setDescription('');\n        setToDoState('');\n        setToDoDate('');\n        setCategory('');\n    }\n\n    if(dogselected) {        \n        localStorage.setItem(\"dogselected\", dogselected);\n    }\n\n\nreturn (\n        <div className='to-do-card'>\n\n            <div className='select-dog'>\n\n                <h5 >Hi {currentUser?.username} </h5>\n                \n\n            </div>\n            \n            <form action=\"\" onSubmit={handleSubmit}>\n            <div>\n                    <label htmlFor=\"dog-todocard\">YOUR DOG</label>\n                    <select name=\"dog-todocard\" id=\"dog-todocard\" onChange={e =>{ \n                        setDogSelected(e.target.value) \n                        }} required >\n                        <option value={dogselected} selected disabled>SELECT YOUR DOG</option>\n                        {dogsList?.map(dogs=>{\n                            return (\n                                <option key={dogs.id} value={dogs.id} selected={dogselected === dogs.id}>{dogs.dogname} </option>\n                            )\n                        })}\n                            \n                    </select>   \n                </div>\n                <div>\n                    <label htmlFor=\"title\">TITLE</label>\n                    <input \n                    type=\"text\" \n                    id=\"title\"\n                    name=\"title\"\n                    value={title}\n                    onChange={(e) => {\n                        setTitle(e.target.value);\n                    }}required/>\n                </div>  \n\n                <div>\n                    <label htmlFor=\"\">DESCRIPTION</label>\n                    <input \n                    type=\"text\" \n                    id=\"description\"\n                    name=\"description\"\n                    value={description}\n                    onChange={(e) => {\n                        setDescription(e.target.value);\n                    }}required/>\n                </div>\n\n                <div>\n                <label htmlFor=\"toDoState\">State</label>\n                <select \n                    id=\"toDoState\"\n                    name=\"toDoState\"\n                    value={todostate}\n                    onChange={(e) => {\n                    setToDoState(e.target.value);\n                    }}\n                >\n                <option value=\"\" selected>SELECT A STATE</option>\n                <option value=\"In Progress\">In progress</option>\n                <option value=\"Done\">Done</option>\n                <option value=\"Pending\">Pending</option>\n                <option value=\"Canceled\">Canceled</option>\n                </select>\n            </div>\n\n            <div>\n                <label htmlFor=\"toDoDate\">TO BE DONE ON:</label>\n                <input\n                    id=\"toDoDate\"\n                    type=\"date\"\n                    name=\"toDoDate\"\n                    value={tododate}\n                    onChange={(e) => {\n                    setToDoDate(e.target.value);\n                    }}/>\n            </div>\n            <div>\n                <label htmlFor=\"category\">CATEGORY</label>\n                <select \n                    id=\"category\"\n                    name=\"category\"\n                    onChange={(e) => {\n                        setCategory(e.target.value);\n                    }}>\n                <option value={dogselected}>SELECT YOUR CATEGORY</option>\n                <option value=\"No Category\">NO CATEGORY</option>\n                            {categorylist?.map(item=>{\n                                return (\n                                    <option key={item.id} value={item.category}>{item.category}</option>\n                                )\n                            })}\n                </select>\n            </div>\n                <button type='submit'> ADD TASK </button>\n            </form>\n        </div>\n)\n\n\n}\n\nexport { AddTask }","import { mapToArray } from \"../../../../helpers\";\nimport { Todo } from \"../../../../types\";\nimport { api } from \"../../../../utils\";\n\n\nconst getToDoList = async (user:string|undefined, dog:string): Promise<Todo[]> =>{\n    \n    const listoftasks = await api.get((`/users/${user}/dogs/${dog}/todo.json`))\n    return mapToArray (listoftasks.data)\n} \n\nconst deleteTask = async (user:string|undefined , dog:string, task:string ) => {\n    await api.delete(`/users/${user}/dogs/${dog}/todo/${task}.json`);\n\n};\n\nexport { getToDoList, deleteTask };","import { Dispatch, FC, SetStateAction, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { AuthContext } from \"../../../context\";\nimport { Todo} from \"../../../types\";\nimport { deleteTask, getToDoList } from \"./api\";\n\n\nimport './styles.scss';\n\nexport type Props={\n    dogselected: string,\n    setDogSelected: Dispatch<SetStateAction<string>>,\n    updatetable:boolean,\n    setUpdateTable: Dispatch<SetStateAction<boolean>>,\n}\nconst Schedule:FC <Props> =({dogselected, updatetable})=>{\n\n    const {currentUser } = useContext(AuthContext);\n\n    const { push } = useHistory();\n    \n\n    const [tasks, setTasks] = useState <Todo[]>();\n    const [idtask, setidTask] = useState <string>(); \n\n    useEffect (()=>{\n        if(dogselected !== ''){\n            getToDoList(currentUser?.id, dogselected ).then(response=>{\n                    \n                setTasks(response) \n                \n            })\n        }\n    },[dogselected, currentUser?.id, updatetable]);\n\n\n    if(idtask)  {\n        localStorage.setItem(\"taskid\", idtask);\n        push(`/edit-task/user:${currentUser?.username}/dogid:${dogselected}/taskid:${idtask}`)\n    };\n\n    const removeTask = async (currentUserId?: string, taskId?: string) => {\n        await deleteTask(currentUserId, dogselected, taskId!)\n\n        getToDoList(currentUser?.id, dogselected ).then(response => {\n\n            setTasks(response) \n            \n        })\n    };\n\n    return (\n        <div>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                    <th>TITLE</th>\n                    <th>DESCRIPTION</th>\n                    <th>TO BE DONE ON</th>\n                    <th>STATE</th>\n                    <th>CATEGORY</th>\n                    <th>EDIT</th>\n                    <th>DELETE</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {tasks?.map((task) => {\n                    return (\n                <tr>\n                    <td>{task.title}</td>\n                    <td>{task.description}</td>\n                    <td>{task.tododate}</td>\n                    <td>{task.todostate}</td>\n                    <td>{task.category}</td>\n                    <td> <button onClick={() => setidTask(task.id)}> EDIT </button> </td>\n                    <td> <button onClick={() => removeTask(currentUser?.id, task.id)}> DELETE </button> </td>\n                </tr>\n                    );\n                })}\n                </tbody>\n            </table>\n        </div> \n    )\n\n};\n\nexport { Schedule }","import { mapToArray } from \"../../../../helpers\";\nimport { Todo } from \"../../../../types\";\nimport { api } from \"../../../../utils\";\n\ntype Response={\n    data:Todo, \n}\n\nconst getTaskToEdit = async (user:string|undefined , dog:string, task:string): Promise <Todo>=> {\n    const listoftasks:Response = await api.get(`/users/${user}/dogs/${dog}/todo/${task}.json`);\n    console.log('listoftasks',listoftasks.data)\n    return listoftasks.data;\n\n};\n\nconst getCategories = async (user:string|undefined) => {\n    const response = await api.get(`/users/${user}/categories.json`);\n    return mapToArray(response.data);\n};\n\nconst editedTask = (user:string|undefined , dog:string, task:string , data: Todo) => {\n    api.patch(`/users/${user}/dogs/${dog}/todo/${task}.json`, data);\n\n};\n\nexport { getTaskToEdit, editedTask, getCategories};    ","import { FC, FormEvent, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { editedTask, getCategories, getTaskToEdit } from \"./api\";\nimport { Category, Todo } from \"../../../types\";\nimport { AuthContext } from \"../../../context\";\n\nimport './styles.scss';\n\n\nconst defaultValues: Todo={\n    title: '',\n    description: '',\n    todostate: ' ',\n    tododate: ' ',\n    category:'',\n}\n\nconst TaskToEdit:FC = ()=> {\n    \n    const [categorylist, setCategoryList] = useState<Category[]>()\n\n    const [dogselected] = useState< string >(\n        localStorage.getItem(\"dogselected\")!\n    );\n\n    const  [taskid]= useState< string >(\n        localStorage.getItem(\"taskid\")!\n    );\n\n    const {currentUser} = useContext(AuthContext);\n    const { push } = useHistory();\n\n    const [inputs, setInputs] = useState (defaultValues);\n\n    useEffect(() => {\n            getCategories(currentUser?.id).then((response) => {\n                setCategoryList(response);\n            });\n            getTaskToEdit(currentUser?.id, dogselected, taskid ).then(response=>{\n                            \n                setInputs(response) \n            })\n    },[]);\n\n    function handleClick() {\n        push(\"/dashboard\");\n    };\n        \n\n\n    const handleSubmit =  (e: FormEvent<HTMLElement>) => {\n        e.preventDefault();\n\n        editedTask (currentUser?.id, dogselected, taskid, { ...inputs} )\n\n        push(`/dashboard/user:${currentUser?.id}/dogid:${dogselected}`);\n\n    }\n\n    return (\n        <div className=\"edit-task\">\n            <form action=\"\" onSubmit={handleSubmit}>\n                <div>\n                    <input \n                        type=\"text\" \n                        name=\"title\" \n                        value={inputs.title} \n                        onChange={e=>{setInputs({...inputs, title:e.target.value} )} } \n                    />\n                </div>\n                <div>\n                    <input \n                        type=\"text\" \n                        name=\"descrption\" \n                        value={inputs.description}\n                        onChange={e=>{setInputs({...inputs, description:e.target.value} )} } \n                    />\n                </div>\n                <div>\n                    <input \n                    type=\"date\" \n                    name=\"toDoDate\" \n                    value={inputs.tododate} \n                    onChange={e=>{setInputs({...inputs, tododate:e.target.value} )} } />\n                </div>\n                <div>\n                    <label htmlFor=\"toDoState\"></label>\n                        <select \n                        name=\"toDoState\"\n                        value={inputs.todostate} \n                        onChange={e=>{setInputs({...inputs, todostate:e.target.value} )} }\n                        >\n                        <option value=\"In Progress\">In progress</option>\n                        <option value=\"Done\">Done</option>\n                        <option value=\"Pending\">Pending</option>\n                        <option value=\"Canceled\">Canceled</option>\n                        </select>\n                </div>\n                <div>\n                    <label htmlFor=\"category\"></label>\n                        <select \n                        name=\"category\"\n                        value={inputs.category} \n                        onChange={e=>{setInputs({...inputs, category:e.target.value} )} }\n                        >\n                        <option \n                        value={dogselected} \n                        selected disabled>SELECT YOUR CATEGORY</option>\n                            {categorylist?.map(item=>{\n                                return (\n                                    <option key={item.id} value={item.category}>{item.category}</option>\n                                )\n                            })}\n                        </select>\n                </div>\n                <button type='submit'> EDIT TASK </button>\n            </form>\n\n            <div>\n                <button onClick={handleClick}> GO BACK </button>\n            </div>\n\n        </div>\n    );\n}\n\nexport { TaskToEdit } ","export  const defaultValues= {\n    email: '',\n    password:'',\n}","import * as yup from 'yup';\n\nexport const validationSchema = yup.object().shape({\n\n    email: yup\n    .string()\n    .email()\n    .required('Campo obligatorio'),\n    password: yup\n    .string()\n    .required('Campo obligatorio'),\n\n})","import { FC } from 'react';\nimport { useAuth } from '../../../hooks';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport {yupResolver} from '@hookform/resolvers/yup';\nimport {defaultValues} from './default-values';\nimport {validationSchema} from './validation-schema'\n\n\nimport './styles.scss';\n\n\nconst Login:FC =()=>{\n\n    const { login } = useAuth();\n\n    const {\n        register, \n        formState: {errors},\n        handleSubmit\n        } = useForm <{ email:string; password: string}> ({\n        resolver: yupResolver (validationSchema),\n        defaultValues,\n    })\n\n    const onSubmit = async (data: { email:string; password: string}) =>  {\n\n        try {\n            await login(data.email, data.password);\n        } catch (err) {\n            console.log(err);\n            }\n    }\n\n\n    return (  \n\n        <div className='login'>\n            <div className=\"login-form\">\n                <form action=\"\" onSubmit={handleSubmit (onSubmit)}>\n                    <h2>LOGIN</h2>\n                    <div>\n                        <label htmlFor=\"email\">EMAIL: </label>\n                        <input \n                            id=\"email\" \n                            type=\"email\"    \n                            placeholder=\"ENTER YOUR EMAIL\" \n                            required\n                            {...register('email')}\n                        />\n                        {errors.email?.message}\n                    </div>\n                    <div>\n                        <label htmlFor=\"password\">PASSWORD: </label>\n                        <input \n                            id=\"password\" \n                            type=\"password\" \n                            placeholder=\"ENTER YOUR PASSWORD\" \n                            required \n                            {...register('password')}  \n                        />\n                        {errors.password?.message}\n                    </div>\n                    <button type=\"submit\">LOGIN</button>\n                    <p>Don´t have an account? <Link to=\"/sign-up\">SIGN-UP</Link></p>\n                </form>\n            </div>   \n        </div>\n    )\n}\nexport {Login};\n","import { FC } from 'react';\nimport { Layout} from '../../component';\nimport {Login} from '../../component/Forms/Login';\n\n\n\n\nconst LoginPage:FC =()=>{\n\n    return (  \n        <Layout page ='Login' hideNav>\n            <Login/> \n        </Layout>\n    )\n}\nexport {LoginPage};\n","import { User } from \"../../../../types\";\nimport { api } from \"../../../../utils\";\n\ntype Payload = Omit <User, 'id' | 'dogname'| 'dogbreedselected'| 'sessionToken'>\n\n\nconst signUp = async (data: Payload) =>{\n    await api.post('/users.json', data);\n}\n\nexport { signUp };\n","\nimport { FormEvent,  FC, useState } from 'react';\nimport { signUp } from './api';\nimport {Presentation} from '../../Layout/Presentation';\nimport { useHistory } from 'react-router';\n\nimport './styles.scss';\n\n\n\n\nconst SignUp: FC = ()=>{\n\n    const [username, setUsername] = useState <string>('')\n    const [password, setPassword] = useState <string>('')\n    const [email, setEmail] = useState <string>('')\n\n    const { push } = useHistory();\n\n\n    const handleSubmit = (e: FormEvent) => {\n        e.preventDefault();\n\n        signUp ({username, password, email })\n\n        push(\"/login\")\n\n    }\n\n\n    return (\n            <div className=\"sign-up\">\n                <div className= \"sign-up-layout\">\n                    <Presentation/>\n                    <form action=\"\" onSubmit={handleSubmit}>\n                        <h2>SIGN-UP</h2>\n                        <div>\n                            <label htmlFor=\"user-name\">USER NAME: </label>\n                            <input id=\"user-name\" type=\"text\" name=\"user-name\" placeholder=\"ENTER YOUR USER NAME\" onChange={(e)=>{\n                                setUsername(e.target.value)\n                            }}required/>\n                        </div>\n                        <div>\n                            <label htmlFor=\"password\">PASSWORD: </label>\n                            <input id=\"password\" type=\"password\" name=\"password\" placeholder=\"ENTER YOUR PASSWORD\" onChange={(e)=>{\n                                setPassword(e.target.value)\n                            }}required/>\n                        </div>\n                        <div>\n                            <label htmlFor=\"email\">EMAIL: </label>\n                            <input id=\"email\" type=\"email\" name=\"email\" placeholder=\"ENTER AN EMAIL\" onChange={(e)=>{\n                                setEmail(e.target.value)\n                            }}required/>\n                        </div>\n                        \n                        <p>Note: if you have more than one dog, you should create a profile per dog so we can addapt the fun for you and your dog.</p>\n\n                        <button type=\"submit\">BECOME A PAWOW</button>\n                    </form>   \n                </div>\n            </div>\n    )\n}\n\n\nexport {SignUp};","\nimport { api } from '../../../../utils';\nimport { mapToArray } from '../../../../helpers';\nimport { Category } from '../../../../types';\n\n\nconst createCategory = async (user:string|undefined, data: Category) => {\n    await api.post(`/users/${user}/categories.json`, data);\n};\n\nconst getCategories = async (user:string|undefined) => {\n    const response = await api.get(`/users/${user}/categories.json`);\n    return mapToArray(response.data);\n};\n\n\nconst deleteCategory = (user:string|undefined , categoryid:string ) => {\n    api.delete(`/users/${user}/categories/${categoryid}.json`);\n\n};\n\n\nexport { createCategory, getCategories, deleteCategory };","import { FC, FormEvent, useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"../../../context\";\nimport { Category } from \"../../../types\";\nimport { createCategory, deleteCategory, getCategories } from \"./api\";\n\nimport './styles.scss';\n\n\nconst Categories: FC = () => {\n\n    \n    const [category, setCategory] = useState<string>('');\n    const [newcategory, setNewCategory] = useState<Category[]>()\n\n    const {currentUser} = useContext(AuthContext);\n\n    const handleSubmit = (e: FormEvent) => {\n        e.preventDefault();\n        \n        createCategory(currentUser?.id, {category} )\n\n        setCategory('');\n    \n    };\n\n    useEffect(() => {\n        getCategories(currentUser?.id).then((response) => {\n            setNewCategory(response);\n        });\n    },);\n    \n    return (\n        <div className='categories'>\n            <h5>ENTER NEW CATEGORY</h5>\n            <form action=\"\" onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"category\">CATEGORY:</label>\n                    <input\n                        id=\"category\"\n                        type=\"text\"\n                        name=\"category\"\n                        value={category}\n                        onChange={(e) => {\n                            setCategory(e.target.value);\n                        }}/>\n                </div>          \n                <button type=\"submit\">CREATE CATEGORY</button>\n            </form> \n            <table>\n                <thead>\n                    <tr>\n                        <th>TASK´S CATEGORIES</th>\n                    </tr>\n                </thead>\n                <tbody>\n                        {newcategory?.map((category) => {\n                        return (\n                    <tr>\n                        <td>{category.category}</td>\n                        <td> <button onClick={() => deleteCategory(currentUser?.id,`${category.id}`)}> DELETE CATEGORY</button> </td>\n                    </tr>\n                        );\n                    })}\n                    </tbody>\n            </table> \n        </div>\n    )\n\n}\n\nexport {Categories};","\nimport { FC } from 'react';\nimport { Layout } from '../../component';\nimport { SignUp } from '../../component/Forms';\n\n\nconst SignUpPage: FC = ()=>{\n\n\n    return (\n        <Layout page ='signup' hideNav>\n            <SignUp/>\n        </Layout>\n    )\n}\n\n\nexport {SignUpPage};","import { FC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Loading } from \"../../component/Common\";\nimport { useAuth } from \"../../hooks/useAuth\";\n\nconst publicRoutes = [\"/login\", \"/sign-up\", \"/contact\"];\n\ntype withAuthenticationFn = (Component: FC) => FC;\n\nconst WithAuth: withAuthenticationFn = (Component) => {\n    const Authenticated: FC = (): JSX.Element | null => {\n        const { push, location } = useHistory();\n\n        const { userSession } = useAuth();\n\n        if (userSession === undefined) return <Loading />;\n\n        if (userSession && publicRoutes.includes(location.pathname)) push(\"/\");\n\n        if (userSession === false && !publicRoutes.includes(location.pathname))\n        push(\"/login\");\n\n        return <Component />;\n    };\n\n    return Authenticated;\n};\n\nexport { WithAuth };","import { FC } from \"react\";\nimport { Layout } from \"../../component\";\nimport { Categories } from \"../../component/Forms\";\nimport { WithAuth } from \"../../hoc\";\n\n\n\nconst CategoriesPage :FC =()=>{\n\n    return (  \n        <Layout page ='categories'>\n        \n            <Categories />   \n    \n        </Layout>\n\n    )\n};\n\nexport default WithAuth(CategoriesPage) ; ","import { FC } from \"react\";\nimport { Layout, ProfileCard } from \"../../component\";\nimport { WithAuth } from \"../../hoc\";\n\n\nimport './styles.scss';\n\nconst Profile :FC =()=>{\n\n    return (  \n        <Layout page ='profile'>\n            <div className='profile-page'>\n            <ProfileCard />   \n            </div>\n        </Layout>\n\n        )\n}\n\nexport default WithAuth(Profile) ; ","import { FC, useState } from 'react';\nimport { AddTask } from '../../component';\nimport { Layout } from '../../component/Layout/Layout-pages';\nimport { Schedule } from '../../component/Layout/Schedule';\nimport { WithAuth } from '../../hoc';\n\nimport './styles.scss';\n\n\nconst Dashboard:FC =()=>{\n\n\n    const [dogselected, setDogSelected] = useState < string >(localStorage.getItem('dogselected')?.toString() || '');\n    const [updatetable , setUpdateTable] = useState (false);\n\n\n    return (\n        <Layout page ='home'>\n            <div className='dashboard'>\n\n                <AddTask dogselected={dogselected} updatetable={updatetable} setDogSelected={setDogSelected} setUpdateTable={setUpdateTable}/>\n            \n                <Schedule dogselected={dogselected} updatetable={updatetable} setDogSelected={setDogSelected} setUpdateTable={setUpdateTable}/>\n            </div>\n        </Layout>\n\n    )\n\n};\n\nexport default WithAuth(Dashboard);","import { FC } from 'react';\nimport {Layout, TaskToEdit } from '../../component';\nimport { WithAuth } from '../../hoc';\n\n\n\nconst EditTask:FC = ()=>{\n\n    return (\n    \n        <Layout page ='edit-task'>\n        \n            <TaskToEdit/> \n\n        </Layout>\n    )\n};\n\nexport default WithAuth (EditTask);","import { FC } from 'react';\n\nimport { Contact, Layout} from '../../component';\n\n\nconst ContactPage:FC = () => {\n\n    return (  \n        <Layout page ='Contact' hideNav hideFooter>\n            <Contact/> \n        </Layout>\n    )\n}\nexport {ContactPage};\n","import {LoginPage} from './pages/LoginPage'\nimport {SignUpPage} from './pages/SignUpPage';\nimport CategoriesPage from './pages/CategoriesPage';\nimport Profile from './pages/Profile';\nimport Dashboard from './pages/Dashboard';\nimport { BrowserRouter, Switch, Route,} from 'react-router-dom';\nimport EditTasks from './pages/EditTasks';\nimport { AuthProvider } from './context';\nimport { ContactPage } from './pages/Contact';\n\n\n\n\n\nfunction App() {\n\n  return (\n    <AuthProvider>\n      <BrowserRouter>\n        <Switch>\n            <Route path=\"/contact\" component={ContactPage}/>\n            <Route path=\"/categories\" component={CategoriesPage}/> \n            <Route path=\"/dashboard\" component={Dashboard}/> \n            <Route path=\"/edit-task\" component={EditTasks}/> \n            <Route path=\"/profile\" component={Profile}/> \n            <Route path=\"/sign-up\" component={SignUpPage}/>\n            <Route path=\"/login\" component={LoginPage}/>\n            <Route path=\"/\" component={Dashboard}/>\n        </Switch>\n      </BrowserRouter>\n    </AuthProvider>\n  ); \n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n    <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}